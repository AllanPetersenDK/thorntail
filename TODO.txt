. High priority

- test keycloak integration using docker
- Some type of BOM to bring the bits together. Stick to 1 for now
- Switch to using https://github.com/agroal/agroal for datasources instead of Ironjacamar
- Pieces to implement:
  - MP REST Client
  - MP JWT
  - MP Open API
  - Bean Validation
  - Hibernate Validator
  - JAX-RS Validation (may not be anything for this in the new world)
  - JMX ??
  - JSF (on the fence on this one)
  - Web Profile (this would require JSF, but maybe we can bundle into it so it's not used separately)
  - Topology (could still be useful even on OpenShift, have had some ideas about what else it could do)
  - Batch (JBeret) ??
  - MDBs (@MessageDriven POJOs are done)
  - Web Services ??
  - Hibernate Search
  - Infinispan
  - Websocket (might be covered by undertow, but worth a test if nothing else)
  - Kafka clients
- 'hollow' distributions for web/microprofile
-- To support that, handle attach=true in the plugin.
- Ability to take OpenAPI spec doc and "link" to endpoint code. Similar to how vert.x does it
-- https://github.com/vert-x3/vertx-web/blob/master/vertx-web-api-contract/src/main/java/io/vertx/ext/web/api/contract/openapi3/OpenAPI3RouterFactory.java
-- https://github.com/rhoar-shootout/rhoar-vertx/blob/master/adjective/src/main/java/com/redhat/labs/adjective/MainVerticle.java#L131

. Bugs

e.g., @MessageDriven by default creates a pool of 15, so I see this 15x
INFO  : Thu Mar 01 10:44:01 EST 2018 [org.hibernate.jpa.internal.util.LogHelper] HHH000204: Processing PersistenceUnitInfo [
name: MyPU
...]

Likely an issue with EMF not being cached properly
This is visible in the opentracing-jaeger testsuite console output.

. Low priority

- Fuller testing of Java EE tech in testsuite
